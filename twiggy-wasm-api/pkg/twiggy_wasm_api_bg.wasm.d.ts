/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function __wbg_items_free(a: number): void;
export function items_parse(a: number, b: number): number;
export function items_top(a: number, b: number, c: number): void;
export function items_items(a: number): number;
export function items_dominators(a: number, b: number, c: number): void;
export function items_paths(a: number, b: number, c: number): void;
export function items_monos(a: number, b: number, c: number): void;
export function items_diff(a: number, b: number, c: number, d: number): void;
export function garbage_new(): number;
export function garbage_max_items(a: number): number;
export function garbage_set_max_items(a: number, b: number): void;
export function garbage_show_data_segments(a: number): number;
export function __wbg_garbage_free(a: number): void;
export function diff_max_items(a: number): number;
export function diff_using_regexps(a: number): number;
export function diff_set_max_items(a: number, b: number): void;
export function diff_set_using_regexps(a: number, b: number): void;
export function __wbg_diff_free(a: number): void;
export function monos_new(): number;
export function monos_only_generics(a: number): number;
export function monos_max_generics(a: number): number;
export function monos_max_monos(a: number): number;
export function monos_using_regexps(a: number): number;
export function monos_set_only_generics(a: number, b: number): void;
export function monos_set_max_generics(a: number, b: number): void;
export function monos_set_max_monos(a: number, b: number): void;
export function __wbg_monos_free(a: number): void;
export function paths_new(): number;
export function paths_add_function(a: number, b: number, c: number): void;
export function paths_max_depth(a: number): number;
export function paths_max_paths(a: number): number;
export function paths_using_regexps(a: number): number;
export function paths_set_max_depth(a: number, b: number): void;
export function paths_set_max_paths(a: number, b: number): void;
export function paths_set_using_regexps(a: number, b: number): void;
export function __wbg_paths_free(a: number): void;
export function dominators_new(): number;
export function dominators_max_depth(a: number): number;
export function dominators_max_rows(a: number): number;
export function dominators_using_regexps(a: number): number;
export function dominators_set_max_depth(a: number, b: number): void;
export function dominators_set_max_rows(a: number, b: number): void;
export function dominators_set_using_regexps(a: number, b: number): void;
export function __wbg_dominators_free(a: number): void;
export function top_new(): number;
export function top_retaining_paths(a: number): number;
export function top_set_retaining_paths(a: number, b: number): void;
export function top_set_retained(a: number, b: number): void;
export function top_set_max_items(a: number, b: number): void;
export function paths_set_descending(a: number, b: number): void;
export function top_max_items(a: number): number;
export function paths_descending(a: number): number;
export function top_retained(a: number): number;
export function __wbg_top_free(a: number): void;
export function __wbindgen_malloc(a: number, b: number): number;
export function __wbindgen_add_to_stack_pointer(a: number): number;
export function __wbindgen_free(a: number, b: number, c: number): void;
export function __wbindgen_realloc(a: number, b: number, c: number, d: number): number;
